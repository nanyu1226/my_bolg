1.用户模块
    注册 ok
    登录
2.用户信息管理
    个人中心
        头像上传
            上传文件:改变名称,只能上传指定格式的文件
        找回密码
            1在登录页面添加一个找回密码的链接
            2渲染指定的模板,用户名/邮箱
            3到数据库中查询,该用户名或邮箱是否存在,如果存在,向该用户的邮箱发送一封邮件,(链接中包含用户的信息)
                用来知道那个用户想找回密码
            4添加重新设置密码的视图函数,用于处理用户点击邮箱中的链接后的相关操作
            5校验之后更新密码
        修改邮箱
            1点击跳转的链接
            2渲染指定的模板,给出新邮箱的输入框
            3校验以后,向新邮箱发送一封邮件(包含当前用户信息 和新邮箱 )
            4写一个视图函数,处理点击邮件链接后的相关操作,用于更新数据库(根据当前登录的用户信息,确定是哪个用户要修改)
        修改密码
            (1)添加一个跳转链接
            (2)添加试图函数渲染指定模板文件
            (3)创建一个修改密码表单
            (4)添加模板文件,渲染表单(原密码,新密码,确认密码)
            (5)先验证原来的密码是否正确,新密码,确认密码是否相等的验证,然后存入数据库

3.博客发表以及回复
    博客展示
        分页
4.收藏
    点赞
    统计等

* flask_script 项目的根目录

**apps 程序目录 is a python package
***  __init__.py
***static 静态文件目录
****css
****js
****images
****favicon.ico # a file to store logo

***templates 模板目录
****common 共同文件夹
*****base.html
****macro 宏文件夹
*****macro.html

***views 所有的试图函数 蓝本 a package
****__init__.py
****main.py 首页 (蓝本)
****posts.py 首页(蓝本)
****user.py 首页(蓝本)

***models 所有的模型都在这里 a package
***forms 所有的表单文件都在这 a package
***config.py  所有的配置都写到这里
***email.py 邮件发送文件
***extensions.py  # all extension files

**manage.py 入口文件,主控文件

**migrations 数据库迁移目录

pip freeze > requirements.txt #将开发环境中安装的扩展导出

导入:
    切换到新的虚拟环境
    把requirements.txt 上传到指定的目录
    切换到requirements.txt 所在的目录
    执行:pip install -t requirements.txt 即可自动安装